name: Deploy

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
env:
  IMG: ghcr.io/${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Parse version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          MAJOR=$(echo "$VERSION" | cut -d. -f1)
          MINOR=$(echo "$VERSION" | cut -d. -f2)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMG }}:${{ env.version }}
            ${{ env.IMG }}:${{ env.version_major }}.${{ env.version_minor }}.latest
            ${{ env.IMG }}:${{ env.version_major }}.latest
            ${{ env.IMG }}:latest

  create-release:
    runs-on: ubuntu-24.04
    needs: build-and-push
    permissions:
      contents: write
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.REMLA_GITHUB_TOKEN }}

  bump-version:
    runs-on: ubuntu-24.04
    needs: build-and-push
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.REMLA_GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

      - name: Install bumpver
        run: pip install bumpver

      - name: Determine next pre-release version
        id: set_version
        run: |
          CURRENT_VERSION=${GITHUB_REF#refs/tags/v}
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          NEXT_PATCH=$((PATCH + 1))
          NEXT_VERSION="${MAJOR}.${MINOR}.${NEXT_PATCH}-alpha"
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV

      - name: Bump version to next pre-release
        run: bumpver update --set-version ${{ env.NEXT_VERSION }}

      - name: Push changes to origin
        env:
          GIT_TOKEN: ${{ secrets.REMLA_GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${REMLA_GITHUB_TOKEN}@github.com/${{ github.repository }}
          git push origin main
